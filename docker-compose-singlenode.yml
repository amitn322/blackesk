version: '3.5'

services:
  syslog-ng:
    container_name: syslog01
    restart: always
    env_file: .env
    build:
      context: ./
      dockerfile: ./syslog-ng/syslog.dockerfile
      args:
        - SYSLOG_VERSION=${SYSLOG_VERSION}
        - TIMEZONE=${TIMEZONE}
    ports:
      - "514:514/udp"
      - "514:514/tcp"
    labels:
      Service name: "Syslog Log Collector"
    networks:
      - syslog
    volumes:
      - ${SYSLOG_CONF_DIR}:/etc/syslog-ng/:z
      - certs:/etc/syslog-ng/certs/:z
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION}
    container_name: es01
    env_file: .env
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - xpack.security.enabled=true
      - xpack.security.authc.api_key.enabled=true
      - xpack.license.self_generated.type=basic
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.key=$CERTS_DIR/es01/es01.key
      - xpack.security.http.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.http.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.enabled=true
      - xpack.security.transport.ssl.verification_mode=certificate
      - xpack.security.transport.ssl.certificate_authorities=$CERTS_DIR/ca/ca.crt
      - xpack.security.transport.ssl.certificate=$CERTS_DIR/es01/es01.crt
      - xpack.security.transport.ssl.key=$CERTS_DIR/es01/es01.key
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data:z
      - certs:$CERTS_DIR:z
      #- "/etc/timezone:/etc/timezone:ro"
      #- "/etc/localtime:/etc/localtime:ro"
    ports:
      - 9200:9200
    networks:
      - elastic
      - syslog
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9200 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
  kib01:
    image: docker.elastic.co/kibana/kibana:${ELASTIC_VERSION}
    container_name: kib01
    restart: always
    env_file: .env
    depends_on:
      - es01
    ports:
      - 5601:5601
    environment:
      SERVERNAME: localhost
      ELASTICSEARCH_URL: https://es01:9200
      ELASTICSEARCH_HOSTS: https://es01:9200
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME}
      ELASTICSEARCH_PASSWORD: ${ELASTICSEARCH_PASSWORD}
      xpack.encryptedSavedObjects.encryptionKey: ${ENCRYPTION_KEY}
      ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES: $CERTS_DIR/ca/ca.crt
      SERVER_SSL_ENABLED: "true"
      SERVER_SSL_KEY: $CERTS_DIR/kib01/kib01.key
      SERVER_SSL_CERTIFICATE: $CERTS_DIR/kib01/kib01.crt
    networks:
      - elastic
    volumes:
      - certs:$CERTS_DIR:z
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:z
      #- "/etc/timezone:/etc/timezone:ro"
      #- "/etc/localtime:/etc/localtime:ro"
  fleet01:
    image: docker.elastic.co/beats/elastic-agent:7.16.2
    hostname: "fleet01"
    container_name: fleet01
    environment:
      - FLEET_SERVER_ENABLE=1
      - FLEET_SERVER_ELASTICSEARCH_HOST=https://es01:9200
      - FLEET_SERVER_ELASTICSEARCH_CA=$CERTS_DIR/ca/ca.crt
      - FLEET_SERVER_ELASTICSEARCH=$CERTS_DIR/ca/ca.crt
      - FLEET_SERVER_SERVICE_TOKEN=$FLEET_SERVICE_TOKEN
      - FLEET_URL=https://fleet01:8220
      - FLEET_SERVER_CERT=$CERTS_DIR/fleet01/fleet01.crt
      - FLEET_SERVER_CERT_KEY=$CERTS_DIR/fleet01/fleet01.key
      - FLEET_SERVER_ES_INSECURE=1

      - FLEET_SERVER_INSECURE_HTTP=0
      - FLEET_INSECURE=1
      - KIBANA_FLEET_CA=${CERTS_DIR}/ca/ca.crt
      - KIBANA_CA=${CERTS_DIR}/ca/ca.crt
      - FLEET_CA=${CERTS_DIR}/ca/ca.crt

      - ELASTICSEARCH_HOST=https://es01:9200
      - ELASTICSEARCH_CA=${CERTS_DIR}/ca/ca.crt
      - CERTIFICATE_AUTHORITIES=${CERTS_DIR}/ca/ca.crt
    ports:
      - 8220:8220
    healthcheck:
      test: "curl -f https://127.0.0.1:8220/api/status | grep HEALTHY 2>&1 > /dev/null"
      retries: 12
      interval: 5s
    volumes:
      - certs:$CERTS_DIR:z
    networks:
      - elastic
volumes:
  data01:
    driver: local
  certs:
    driver: local

networks:
  elastic:
    driver: bridge
  syslog:
    driver: bridge

